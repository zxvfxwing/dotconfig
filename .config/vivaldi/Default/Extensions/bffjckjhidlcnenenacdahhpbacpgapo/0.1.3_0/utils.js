'use strict';

var utils = {
  aton4: (a) => {
    a = a.split(/\./);
    return ((parseInt(a[0], 10)<<24)>>>0) + ((parseInt(a[1], 10)<<16)>>>0) + ((parseInt(a[2], 10)<<8)>>>0) + (parseInt(a[3], 10)>>>0);
  },
  isIP4: (function (re) {
    return ipv4 => re.test(ipv4);
  })(/^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$/),
  isIP6: (function (re) {
    return ipv6 => re.test(ipv6);
  })(/(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))/),
  isPrivate: (ip) => {
    return ip === '::1' ||
      ip === '0.0.0.0' ||
      ip.match(/^10\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})/) !== null ||
      ip.match(/^192\.168\.([0-9]{1,3})\.([0-9]{1,3})/) !== null ||
      ip.match(/^172\.16\.([0-9]{1,3})\.([0-9]{1,3})/) !== null ||
      ip.match(/^127\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})/) !== null ||
      ip.match(/^169\.254\.([0-9]{1,3})\.([0-9]{1,3})/) !== null ||
      ip.match(/^fc00:/) !== null || ip.match(/^fe80:/) !== null;
  }
};

utils.aton6 = function (a) {
  a = a.replace(/"/g, '').split(/:/);

  var l = a.length - 1;
  var i;

  if (a[l] === '') {
    a[l] = 0;
  }

  if (l < 7) {
    a.length = 8;

    for (i = l; i >= 0 && a[i] !== ''; i--) {
      a[7-l+i] = a[i];
    }
  }

  for (i = 0; i < 8; i++) {
    if (!a[i]) {
      a[i]=0;
    } else {
      a[i] = parseInt(a[i], 16);
    }
  }

  var r = [];
  for (i = 0; i<4; i++) {
    r.push(((a[2*i]<<16) + a[2*i+1])>>>0);
  }

  return r;
};

utils.cmp6 = function (a, b) {
  for (var ii = 0; ii < 2; ii++) {
    if (a[ii] < b[ii]) {
      return -1;
    }

    if (a[ii] > b[ii]) {
      return 1;
    }
  }

  return 0;
};
